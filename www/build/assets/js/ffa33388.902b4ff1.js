"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[793],{2216:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=n(4848),r=n(8453);const i={title:"Errors and defaults",description:"Understanding the limits of this library,default behaviours and ways of handling common errors.",sidebar_position:4,hide_title:!0},s=void 0,a={id:"guides/behaviour",title:"Errors and defaults",description:"Understanding the limits of this library,default behaviours and ways of handling common errors.",source:"@site/docs/guides/behaviour.mdx",sourceDirName:"guides",slug:"/guides/behaviour",permalink:"/docs/guides/behaviour",draft:!1,unlisted:!1,editUrl:"https://github.com/prjctimg/huetiful/tree/main/www/docs/guides/behaviour.mdx",tags:[],version:"current",lastUpdatedBy:"Dean prjctimg",lastUpdatedAt:1725722201e3,sidebarPosition:4,frontMatter:{title:"Errors and defaults",description:"Understanding the limits of this library,default behaviours and ways of handling common errors.",sidebar_position:4,hide_title:!0},sidebar:"docs",previous:{title:"Guides",permalink:"/docs/guides"},next:{title:"What's new ?",permalink:"/docs/guides/changes"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Color parsing behaviour",id:"color-parsing-behaviour",level:3},{value:"Default <code>baseColor</code> for palette generators",id:"default-basecolor-for-palette-generators",level:3},{value:"Default <code>options</code> for collection utilities",id:"default-options-for-collection-utilities",level:3},{value:"Common errors",id:"common-errors",level:2},{value:"Why am I only getting achromatic (grey) colors ?",id:"why-am-i-only-getting-achromatic-grey-colors-",level:3},{value:"Generated color samples are a bit off",id:"generated-color-samples-are-a-bit-off",level:3}];function d(e){const o={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(o.p,{children:"Whenever possible, the library passes internal defaults to make sure that the least amount of errors surface unnecessarily."}),"\n",(0,t.jsxs)(o.p,{children:["For example all ",(0,t.jsx)(o.code,{children:"options"})," objects are optional but in certain scenarios these options have to be specified to remove ambiguity."]}),"\n",(0,t.jsx)(o.admonition,{type:"tip",children:(0,t.jsxs)(o.p,{children:["In this article when I say color object I mean a color token defined either as an ",(0,t.jsx)(o.code,{children:"Array"})," instance or plain object."]})}),"\n",(0,t.jsx)(o.h3,{id:"color-parsing-behaviour",children:"Color parsing behaviour"}),"\n",(0,t.jsxs)(o.admonition,{type:"caution",children:[(0,t.jsx)(o.mdxAdmonitionTitle,{}),(0,t.jsxs)(o.p,{children:["A good example is with ",(0,t.jsx)(o.code,{children:"token()"}),", if you pass in the color token as an array or plain object without the ",(0,t.jsx)(o.code,{children:"mode"})," specified it will treat the color as if it is in the mode ",(0,t.jsx)(o.code,{children:"'rgb'"}),". This can lead to incorrect final results or error."]}),(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-ts",children:"\nimport { token } from 'huetiful-js';\n\n\n\n// c1 is an array of RGB channels\nconst c1 = [0.8, 0.5, 0.3],\n\t// c2 is an array of LCH channels.\n\t// Its treated as RGB and normalized to the range [0,1]\n\t// if normalizeRgb is true\n\tc2 = [80, 55, 30],\n\t// this works because the default srcMode is rgb\n\tc3 = { r: 0.8, g: 0.5, b: 0.3 },\n\t// this just produces black because the default channel keys \n\t// differ from the color token's\n\tc4 = { l: 80, c: 55, h: 30 };\n\nconst res = [];\nfor (const c of [c1, c2, c3, c4]) {\n\tres.push(token(c));\n}\n\nconsole.log(res)\n\n// [ '#cc804dff', '#50371eff', '#cc804dff', '#000000ff' ]\n\n"})}),(0,t.jsxs)(o.p,{children:["Always try to define the mode of your color objects (be it arrays or plain objects) or explicitly via the ",(0,t.jsx)(o.code,{children:"srcMode"})," property if your omit it from the color object."]})]}),"\n",(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"srcMode"})," is inferred from the passed in color token during parsing in the following order of precedence:"]}),"\n",(0,t.jsxs)(o.ol,{start:"0",children:["\n",(0,t.jsxs)(o.li,{children:["\n",(0,t.jsxs)(o.p,{children:["A ",(0,t.jsx)(o.code,{children:"mode"})," property (if ",(0,t.jsx)(o.code,{children:"object"}),") or the first element (if ",(0,t.jsx)(o.code,{children:"Array"}),") which is expected to be of type ",(0,t.jsx)(o.code,{children:"string"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(o.li,{children:["\n",(0,t.jsxs)(o.p,{children:["If the color token is of type ",(0,t.jsx)(o.code,{children:"string"})," (regardless its a CSS named color, serialized color string or hex), ",(0,t.jsx)(o.code,{children:"number"})," or ",(0,t.jsx)(o.code,{children:"boolean"})," then the mode is ",(0,t.jsx)(o.code,{children:"'rgb'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(o.p,{children:["However in utilities that perform hue dependant operations like ",(0,t.jsx)(o.code,{children:"hueshift()"}),", then the default colorspace is ",(0,t.jsx)(o.code,{children:"lch"}),"."]}),"\n",(0,t.jsxs)(o.admonition,{type:"caution",children:[(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"srcMode"})," property will override the color object's ",(0,t.jsx)(o.code,{children:"mode"}),"."]}),(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-ts",children:"// the mode will be 'lab'\nconst c1 = ['lch',65,38,19,0.3]\n\ntoken(c1,{ srcMode:'lab',kind:'arr' })\n\n// ['lab',65,38,19,0.3]\n\n"})})]}),"\n",(0,t.jsxs)(o.h3,{id:"default-basecolor-for-palette-generators",children:["Default ",(0,t.jsx)(o.code,{children:"baseColor"})," for palette generators"]}),"\n",(0,t.jsxs)(o.p,{children:["Every utility that takes an individual color token (known as ",(0,t.jsx)(o.code,{children:"baseColor"}),") provides ",(0,t.jsx)(o.code,{children:"'cyan'"})," as the default color."]}),"\n",(0,t.jsxs)(o.h3,{id:"default-options-for-collection-utilities",children:["Default ",(0,t.jsx)(o.code,{children:"options"})," for collection utilities"]}),"\n",(0,t.jsxs)(o.p,{children:["For every utility that takes an ",(0,t.jsx)(o.code,{children:"options"})," object, its internally guarded with default parameters to ensure that you can customize just what you want and let the rest be."]}),"\n",(0,t.jsx)(o.h2,{id:"common-errors",children:"Common errors"}),"\n",(0,t.jsx)(o.p,{children:"The sources of bias when manipulating color are nuanced and sometimes not immediately obvious."}),"\n",(0,t.jsx)(o.h3,{id:"why-am-i-only-getting-achromatic-grey-colors-",children:"Why am I only getting achromatic (grey) colors ?"}),"\n",(0,t.jsxs)(o.p,{children:["One of the bugs I encountered was when I got gray colors if I tried to interpolate via black.\nThe bug stemmed from the fact that black has an ",(0,t.jsx)(o.code,{children:"undefined"})," hue channel therefore all the resulting colors would have ",(0,t.jsx)(o.code,{children:"NaN"})," as their hue channel value. The way around this was to explicitly pass all channels as ",(0,t.jsx)(o.code,{children:"0"})," in the target hue based colorspace."]}),"\n",(0,t.jsx)(o.h3,{id:"generated-color-samples-are-a-bit-off",children:"Generated color samples are a bit off"}),"\n",(0,t.jsx)(o.p,{children:"At the mopment there's inevitable precision loss when converting across certain colorspaces. This can slightly alter the final result of the color. In the future, I may provide a fix for this."})]})}function h(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>a});var t=n(6540);const r={},i=t.createContext(r);function s(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);